Ordered list of things to do next:
- Create a hashtable for nicknames
- Check for duplicates when setting/changing nickname
- Utility functions for numeric replies, error handling, ...
- Outgoing message buffers, epoll for writable state, ...
- Implement notice and simplest form of privmsg - directly to nickname, no channels
Bigger chunks after that:
- Start working on channels
- User modes, channel modes
- Whois, who, ...
- All other required commands (except server to server)
Far future, optional crap
- Ident lookup
- Configuration file parsing, ...
- Data storage (bans, whowas history, ...)
- Operator commands - reset, reload, ...
- Multiple server support - message relaying, ...
- Benchmarking - create very simple clients that will join random channels and keep sending random messages

Roadmap
* structures - make macros for list/hashmap definitions and operation functions, then just use them in each submodule with names and types substituted
* clean up main loop to some function with function pointers for event handling 
* send messages to all others clients
- parse commands
  - parse prefix
- proper login to server with /user etc
- privmsg, notice
- heartbeat timeout for ping/pong etc
- channels - linked list channels like users, with hashtables etc
- send messages to other clients in the same channel
- add stdin to the monitored descriptors, receive commands from there
- start implementing the rest of RFC


- TODO:
  - better error handling
  - more info/debug output, with -v switches to turn on/off
  - remove all printf/..., turn everything into error/info/debug _print
  - more const qualifiers etc to make the code more robust
  - static analysis
  - turn warning into errors, more compiler flags (optimizations etc)