Roadmap
* structures - make macros for list/hashmap definitions and operation functions, then just use them in each submodule with names and types substituted
* clean up main loop to some function with function pointers for event handling 
* create a list of connected users
  * linked list of structs - fd, hostname, ...
  * events have pointer to the list element in user data
* send messages to all others clients
* users can register their name, have some state (registered or not), ...
- parse commands
  - utils to do string manipulations
  - rfc message parsing
  - per-user buffers, append data on receive, split into lines, dispatch events
- proper login to server with /user etc
- privmsg, notice
- heartbeat timeout for ping/pong etc
- channels - linked list channels like users, with hashtables etc
- send messages to other clients in the same channel
- add stdin to the monitored descriptors, receive commands from there
- start implementing the rest of RFC


- TODO:
  - better error handling
  - more info/debug output, with -v switches to turn on/off
  - remove all printf/..., turn everything into error/info/debug _print
  - more const qualifiers etc to make the code more robust
  - static analysis
  - turn warning into errors, more compiler flags (optimizations etc)